{"version":3,"sources":["components/Tab/tab.tsx","components/TabsList/tabsList.tsx","components/TabsPage/tabsPage.tsx","pages/PageNavLink.tsx","components/Nav/Nav.tsx","App.tsx","index.tsx"],"names":["Tab","id","title","to","tabs","content","TabsList","selectedTabId","selectedTabContent","find","tab","isExistTabId","some","className","map","classNames","TabsPage","useParams","tabId","PageNavLink","text","isActive","Nav","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"uPAQaA,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC5B,cAAC,IAAD,CAAMC,GAAE,aAAQF,GAAhB,SACIC,KCFAE,EAAO,CACX,CAAEH,GAAI,QAASC,MAAO,QAASG,QAAS,eACxC,CAAEJ,GAAI,QAASC,MAAO,QAASG,QAAS,eACxC,CAAEJ,GAAI,QAASC,MAAO,QAASG,QAAS,gBAG7BC,EAA4B,SAAC,GAEnC,IAAD,EADJC,EACI,EADJA,cAEMC,EAAkB,UAAGJ,EAAKK,MAC9B,SAAAC,GAAG,OAAIH,IAAkBG,EAAIT,aADP,aAAG,EAExBI,QAEGM,EAAeP,EAAKQ,MAAK,SAAAF,GAAG,OAAIH,IAAkBG,EAAIT,MAE5D,OACE,qCACE,qBAAKY,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAJ,GAAG,OACX,oBACE,UAAQ,MAERG,UAAWE,IAAW,CACpB,YAAaR,IAAkBG,EAAIT,KAJvC,SAOE,cAAC,EAAD,CAAKA,GAAIS,EAAIT,GAAIC,MAAOQ,EAAIR,SALvBQ,EAAIT,WAWhBO,GACC,qBAAKK,UAAU,QAAQ,UAAQ,aAA/B,SACIL,KAIJG,GACA,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,qCC7CKG,EAAW,WACtB,MAAuBC,cAAfC,aAAR,MAAgB,GAAhB,EAEA,OACE,qCACE,oBAAIL,UAAU,QAAd,uBAEA,cAAC,EAAD,CAAUN,cAAeW,QCDlBC,EAAyB,SAAC,GAAD,IAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAP,OACpC,cAAC,IAAD,CACEjB,GAAIA,EACJU,UAAW,gBAAGQ,EAAH,EAAGA,SAAH,OAAkBN,IAC3B,cACA,CACE,YAAaM,KALnB,SASGD,KCjBQE,EAAM,kBACjB,qBACET,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaV,GAAG,IAAIiB,KAAK,SACzB,cAAC,EAAD,CAAajB,GAAG,OAAOiB,KAAK,iBCDvBG,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKV,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEW,KAAK,IACLC,QACE,oBAAIZ,UAAU,QAAd,yBAMJ,cAAC,IAAD,CAAOW,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIuB,SAAO,MAEpD,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CACED,KAAK,IACLC,QACE,oBAAIZ,UAAU,QAAd,yCC/Bde,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64994d71.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  id: string,\n  title: string\n};\n\nexport const Tab: FC<Props> = ({ id, title }) => (\n  <Link to={`../${id}`}>\n    { title }\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../Tab/tab';\n\ntype Props = {\n  selectedTabId: string,\n};\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsList: React.FC<Props> = ({\n  selectedTabId,\n}) => {\n  const selectedTabContent = tabs.find(\n    tab => selectedTabId === tab.id,\n  )?.content;\n\n  const isExistTabId = tabs.some(tab => selectedTabId === tab.id);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames({\n                'is-active': selectedTabId === tab.id,\n              })}\n            >\n              <Tab id={tab.id} title={tab.title} />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {selectedTabContent && (\n        <div className=\"block\" data-cy=\"TabContent\">\n          { selectedTabContent }\n        </div>\n      )}\n\n      {!isExistTabId && (\n        <div className=\"block\" data-cy=\"TabContent\">\n          Please select a tab\n        </div>\n      )}\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { TabsList } from '../TabsList';\n\nexport const TabsPage = () => {\n  const { tabId = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs Page</h1>\n\n      <TabsList selectedTabId={tabId} />\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\nexport type Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'is-active': isActive,\n      },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../../pages/PageNavLink';\n\nexport const Nav = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { TabsPage } from './components/TabsPage';\nimport { Nav } from './components/Nav';\n\nexport const App = () => (\n  <>\n    <Nav />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(\n              <h1 className=\"title\">\n                Home page\n              </h1>\n            )}\n          />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={(\n              <h1 className=\"title\">\n                Page not found\n              </h1>\n            )}\n          />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}